* Things to make available via MODBUS

** This data for each pin of each port (24 pins some reserved):

*** Configuration and state data

1) Whether the pin is available for the user.
2) Whether the pin supports analog input.
3) Whether the pin support analog output.
4) I/O direction: 0 output, 1 input.
5) I/O mode: 0 digital, 1 analog.
6) Switch on/off internal pullup
7) Switch on/off counter.

In the atmega 328p every pin supports digital I/O. 1) lets us show
which pins are reserved keeping always the same addresses.

*** Current pin digital input value (24 pins)

The pins that are not available for the user have an assigned address
too. These makes mapping configuration space addresses to input space
address more straightforward.

This bits are located in the discrete input space (code 02).

This bits are located in the "coils" space (codes 01, 05, 15).


*** Current digital output value (24 pins)

The pins that are not available for the user have an assigned address
too. These makes mapping configuration space addresses to output space
address more straightforward.

This bits are located in the "coils" space (codes 01, 05, 15).

*** Counters (24 pins)

24 uint16_t. The pins that are not available for the user have an
assigned address too. These makes mapping configuration space
addresses to counter space address more straightforward.

The counters are located in the internal registers or physical output
registers space (codes 03, 06, 16).

*** Analog input (24 pins)

24 uint16_t. The pins that are not available for the user or do not
support analog reading have an assigned address too. These makes
mapping configuration space addresses to analog input space address
more straightforward.

24 uint16_t. Los pins que no están disponibles para el usuario o que
no soportan entrada analógica también tienen su dirección de manera
que se mantiene un mapeo entre bytes del espacio de configuración y
bits del espacio de entrada analógica.

The analog input registers are located in the internal registers or
physical output registers space (codes 03, 06, 16).

*** Analog output

To be implemented

* Coils

** Configuration space

The pins are numbered from 0 to 23. First PORTB, then PORTC and
finally PORTD.

|------+-------+-------+-------+-------+-------+-------+-------+-------|
|      | __7__ | __6__ | __5__ | __4__ | __3__ | __2__ | __1__ | __0__ |
|------+-------+-------+-------+-------+-------+-------+-------+-------|
| 0000 | AU07  | AU06  | AU05  | AU04  | AU03  | AU02  | AU01  | AU00  |
| 0008 | AU15  | AU14  | AU13  | AU12  | AU11  | AU10  | AU09  | AU08  |
| 0010 | AU23  | AU22  | AU21  | AU20  | AU19  | AU18  | AU17  | AU16  |
|------+-------+-------+-------+-------+-------+-------+-------+-------|
| 0018 | AI07  | AI06  | AI05  | AI04  | AI03  | AI02  | AI01  | AI00  |
| 0020 | AI15  | AI14  | AI13  | AI12  | AI11  | AI10  | AI09  | AI08  |
| 0028 | AI23  | AI22  | AI21  | AI20  | AI19  | AI18  | AI17  | AI16  |
|------+-------+-------+-------+-------+-------+-------+-------+-------|
| 0030 | AO07  | AO06  | AO05  | AO04  | AO03  | AO02  | AO01  | AO00  |
| 0038 | AO15  | AO14  | AO13  | AO12  | AO11  | AO10  | AO09  | AO08  |
| 0040 | AO23  | AO22  | AO21  | AO20  | AO19  | AO18  | AO17  | AO16  |
|------+-------+-------+-------+-------+-------+-------+-------+-------|
| 0048 | IOD07 | IOD06 | IOD05 | IOD04 | IOD03 | IOD02 | IOD01 | IOD00 |
| 0050 | IOD15 | IOD14 | IOD13 | IOD12 | IOD11 | IOD10 | IOD09 | IOD08 |
| 0058 | IOD23 | IOD22 | IOD21 | IOD20 | IOD19 | IOD18 | IOD17 | IOD16 |
|------+-------+-------+-------+-------+-------+-------+-------+-------|
| 0060 | IOM07 | IOM06 | IOM05 | IOM04 | IOM03 | IOM02 | IOM01 | IOM00 |
| 0068 | IOM15 | IOM14 | IOM13 | IOM12 | IOM11 | IOM10 | IOM09 | IOM08 |
| 0070 | IOM23 | IOM22 | IOM21 | IOM20 | IOM19 | IOM18 | IOM17 | IOM16 |
|------+-------+-------+-------+-------+-------+-------+-------+-------|
| 0078 | EIP07 | EIP06 | EIP05 | EIP04 | EIP03 | EIP02 | EIP01 | EIP00 |
| 0080 | EIP15 | EIP14 | EIP13 | EIP12 | EIP11 | EIP10 | EIP09 | EIP08 |
| 0088 | EIP23 | EIP22 | EIP21 | EIP20 | EIP19 | EIP18 | EIP17 | EIP16 |
|------+-------+-------+-------+-------+-------+-------+-------+-------|
| 0090 | EC07  | EC06  | EC05  | EC04  | EC03  | EC02  | EC01  | EC00  |
| 0098 | EC15  | EC14  | EC13  | EC12  | EC11  | EC10  | EC09  | EC08  |
| 00A0 | EC23  | EC22  | EC21  | EC20  | EC19  | EC18  | EC17  | EC16  |
|------+-------+-------+-------+-------+-------+-------+-------+-------|
| 00A8 | PI07  | PI06  | PI05  | PI04  | PI03  | PI02  | PI01  | PI00  |
| 00B0 | PI15  | PI14  | PI13  | PI12  | PI11  | PI10  | PI09  | PI08  |
| 00B8 | PI23  | PI22  | PI21  | PI20  | PI19  | PI18  | PI17  | PI16  |
|------+-------+-------+-------+-------+-------+-------+-------+-------|
| 00C0 | PO07  | PO06  | PO05  | PO04  | PO03  | PO02  | PO01  | PO00  |
| 00C8 | PO15  | PO14  | PO13  | PO12  | PO11  | PO10  | PO09  | PO08  |
| 00D0 | PO23  | PO22  | PO21  | PO20  | PO19  | PO18  | PO17  | PO16  |
|------+-------+-------+-------+-------+-------+-------+-------+-------|

- AUnn: 1 if the pin number nn is available for the user. Read only.
  Address: AUnn -> nn
- AInn: 1 if the pin number nn supports analog input. Read only.
  Address: AUnn -> nn + 0x18
- AOnn: 1 if the pin number nn supports analog output. Read only.
  Address: AUnn -> nn + 0x30
- IODnn: Input Output Direction. Set to use this pin as output, clear
  to use it as input.
  Address: IODnn -> nn + 0x48
- IOMnn: Input Output Mode. Set to use pin for analog I/O. Clear to
  use the pin for digital IO. Subject to the value of IODnn.
  Address: IOMnn -> nn + 0x60
- EIPnn: Enable Internal Pullup. Set to activate internal pull up
  resistor. Setting EIPnn automatically sets IODnn.
  Address: EIPnn -> nn + 0x78
- ECnn: Enable Counter. Set to enable 16 bits counter linked to pin
  nn.
  Address: ECnn -> nn + 0x90
- PInn: Pin Input. Read only. The current digital value of pin nn.
  Address: PInn -> nn + 0xA8
- POnn: Pin Output. Output value of the nn pin. Ignored if IODnn set
  to input.
  Address: PInn -> nn + 0xC0

** Commands

|------+-------+-------+-------+-------+-------+-------+-------+-------|
|      | __7__ | __6__ | __5__ | __4__ | __3__ | __2__ | __1__ | __0__ |
|------+-------+-------+-------+-------+-------+-------+-------+-------|
| 0100 |       |       |       |       |       |       | LOAD  | SAVE  |
|------+-------+-------+-------+-------+-------+-------+-------+-------|

This bits are read only.

Requesting a write to the 0x100 address saves the current
configuration (the IOD, IOM, EIP and EC bits) to the permanent
storage.

Requesting a write to the 0x101 address loads the stored configuration
(the IOD, IOM, EIP and EC bits) to the permanent storage.

The last stored configuration is restored automatically after a reset.

* Records

|------+------------|
| addr | name       |
|------+------------|
| 0000 | ANALOGIN00 |
| 0001 | ANALOGIN01 |
|  ... | ...        |
| 0007 | ANALOGIN07 |
| 0008 | TC2ACONF   |
| 0009 | TC2BCONF   |
|  ... | ...        |
| 000a | COUNTER00  |
| 0016 | COUNTER15  |
|  ... | ...        |
| 0022 | USER DATA  |
|------+------------|

- COUNTERnn: current value of the counter linked to the nn pin. Can be
  written to set the counters to any required value although it is not
  recommended to do it with the counter active since there is no any
  type of synchronization implemented.

- ANALOGINnn: current analog value of the nn pin.

- TC2CONF: bit field to configure the timer counter unit 2.

** TC2CONF

|------------------|
| HI BYTE LOW BYTE |
| 7654321076543210 |
|------------------|
| __MM_SSSDDDDDDDD |
|------------------|

- D: duty cycle
- S: prescaler selection
  - 0: STOP
  - 1: PRESCALE_1
  - 2: PRESCALE_8
  - 3: PRESCALE_32
  - 4: PRESCALE_64
  - 5: PRESCALE_128
  - 6: PRESCALE_256
  - 7: PRESCALE_1024
- M: mode
  - 0: DISCONNECTED
  - 2: phase correct PWM non inverting
  - 3: phase correct PWM non inverting

* Timing considerations

In order to generate the tables shown in this section the execution of
the program is timed using the internal 20Khz signal and the resulting
32 bit values are exposed as user data. All readings are in
microseconds in show the maximum value recorded.

#+CAPTION: Calling read_coils to read 216 bits
#+NAME: tab:with-read-coils
|--------+--------+-------------|
|   ADDR |  VALUE | DESCRIPTION |
|--------+--------+-------------|
| 0x0024 | 0x0c1c | T. ALL (L)  |
| 0x0025 | 0x0000 | T. ALL (H)  |
| 0x0026 | 0x0096 | T. TR  (L)  |
| 0x0027 | 0x0000 | T. TR  (H)  |
| 0x0028 | 0x0b86 | T. PDU (L)  |
| 0x0029 | 0x0000 | T. PDU (H)  |
| 0x002a | 0x0032 | T. ADC (L)  |
| 0x002b | 0x0000 | T. ADC (H)  |
| 0x002c | 0x0096 | T. CNT (L)  |
| 0x002d | 0x0000 | T. CNT (H)  |
|--------+--------+-------------|

#+CAPTION: Never calling read coils
#+NAME: tab:without-read-coils
|--------+--------+-------------|
|   ADDR |  VALUE | DESCRIPTION |
|--------+--------+-------------|
| 0x0024 | 0x0226 | T. ALL (L)  |
| 0x0025 | 0x0000 | T. ALL (H)  |
| 0x0026 | 0x0096 | T. TR  (L)  |
| 0x0027 | 0x0000 | T. TR  (H)  |
| 0x0028 | 0x015e | T. PDU (L)  |
| 0x0029 | 0x0000 | T. PDU (H)  |
| 0x002a | 0x0032 | T. ADC (L)  |
| 0x002b | 0x0000 | T. ADC (H)  |
| 0x002c | 0x0096 | T. CNT (L)  |
| 0x002d | 0x0000 | T. CNT (H)  |
|--------+--------+-------------|

#+CAPTION: read coils returns constant 0
#+NAME: tab:return-0-read-coils
|--------+--------+-------------|
|   ADDR |  VALUE | DESCRIPTION |
|--------+--------+-------------|
| 0x0024 | 0x0226 | T. ALL (L)  |
| 0x0025 | 0x0000 | T. ALL (H)  |
| 0x0026 | 0x0096 | T. TR  (L)  |
| 0x0027 | 0x0000 | T. TR  (H)  |
| 0x0028 | 0x015e | T. PDU (L)  |
| 0x0029 | 0x0000 | T. PDU (H)  |
| 0x002a | 0x0032 | T. ADC (L)  |
| 0x002b | 0x0000 | T. ADC (H)  |
| 0x002c | 0x0096 | T. CNT (L)  |
| 0x002d | 0x0000 | T. CNT (H)  |
|--------+--------+-------------|

Read coils is found to be the most time consuming operation. Reading
216 coils requires 3100us (0xc1c). If we never read any coils the
longest remaining operation requires only 216us. We see the same value
of 216us if we simplify the implementation of the coil reading
function to return always the constant 0.
